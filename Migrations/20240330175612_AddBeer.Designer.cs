// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeBoozin.Data;

#nullable disable

namespace WeBoozin.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240330175612_AddBeer")]
    partial class AddBeer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("WeBoozin.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CartId"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("WeBoozin.Models.CartItem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CartItemId"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartItemId");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("WeBoozin.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryImage = "/Photos/Vodka.webp",
                            CategoryName = "Vodka"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryImage = "/Photos/Tequila.webp",
                            CategoryName = "Tequila"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryImage = "/Photos/Beer.webp",
                            CategoryName = "Beer"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryImage = "/Photos/Whiskey.webp",
                            CategoryName = "Whiskey"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryImage = "/Photos/Gin.webp",
                            CategoryName = "Gin"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryImage = "/Photos/Rum3.webp",
                            CategoryName = "Rum"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryImage = "/Photos/Liquor.webp",
                            CategoryName = "Liquor"
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryImage = "/Photos/Wine2.webp",
                            CategoryName = "Wine"
                        },
                        new
                        {
                            CategoryId = 9,
                            CategoryImage = "/Photos/Champagne2.webp",
                            CategoryName = "Champagne"
                        });
                });

            modelBuilder.Entity("WeBoozin.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WeBoozin.Models.OrderDetails", b =>
                {
                    b.Property<int>("OrderDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrderDetailsId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailsId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("WeBoozin.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<double>("AlcoholContent")
                        .HasColumnType("double");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("QuantityInMl")
                        .HasColumnType("int");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            AlcoholContent = 40.0,
                            CategoryId = 1,
                            Description = "Feel the purity of your soul through this wonder drink.",
                            Image = "/Photos/Vodka1.webp",
                            ProductName = "Purity of Soul",
                            QuantityInMl = 750,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 2,
                            AlcoholContent = 40.0,
                            CategoryId = 1,
                            Description = "Feel the fire in your heart with this vodka designed to lit your soul.",
                            Image = "/Photos/Vodka2.webp",
                            ProductName = "Fire in the Heart",
                            QuantityInMl = 750,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 3,
                            AlcoholContent = 40.0,
                            CategoryId = 1,
                            Description = "Feel the lightness in your soul with every sip of this vodka.",
                            Image = "/Photos/Vodka3.webp",
                            ProductName = "Lightness of Soul",
                            QuantityInMl = 750,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 4,
                            AlcoholContent = 40.0,
                            CategoryId = 1,
                            Description = "Feel the freedom of your mind through after the first sip of this vodka.",
                            Image = "/Photos/Vodka4.webp",
                            ProductName = "Freedom of Mind",
                            QuantityInMl = 750,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 5,
                            AlcoholContent = 40.0,
                            CategoryId = 1,
                            Description = "Feel the victory in your veins with this vodka.",
                            Image = "/Photos/Vodka5.webp",
                            ProductName = "Victorious",
                            QuantityInMl = 750,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 6,
                            AlcoholContent = 40.0,
                            CategoryId = 1,
                            Description = "Feel the strength in your veins with this vodka.",
                            Image = "/Photos/Vodka6.webp",
                            ProductName = "Russian Power",
                            QuantityInMl = 750,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 7,
                            AlcoholContent = 40.0,
                            CategoryId = 1,
                            Description = "Feel the glory like a Russian with this vodka.",
                            Image = "/Photos/Vodka7.webp",
                            ProductName = "Russian Glory",
                            QuantityInMl = 750,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 8,
                            AlcoholContent = 40.0,
                            CategoryId = 1,
                            Description = "Become an alpha of your pac after the first sip of this vodka.",
                            Image = "/Photos/Vodka8.webp",
                            ProductName = "Alpha Male",
                            QuantityInMl = 750,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 9,
                            AlcoholContent = 40.0,
                            CategoryId = 1,
                            Description = "Become an elite with this vodka.",
                            Image = "/Photos/Vodka9.webp",
                            ProductName = "World ELite",
                            QuantityInMl = 750,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 10,
                            AlcoholContent = 45.0,
                            CategoryId = 2,
                            Description = "Live through the fire of Latino culture.",
                            Image = "/Photos/Tequila1.webp",
                            ProductName = "Latino Fire",
                            QuantityInMl = 750,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 11,
                            AlcoholContent = 37.0,
                            CategoryId = 2,
                            Description = "Feel the pride of Mexico with this tequila.",
                            Image = "/Photos/Tequila2.webp",
                            ProductName = "Mexican Pride",
                            QuantityInMl = 750,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 12,
                            AlcoholContent = 40.0,
                            CategoryId = 2,
                            Description = "Experience the Mexican fiesta at your home.",
                            Image = "/Photos/Tequila3.webp",
                            ProductName = "Fiesta",
                            QuantityInMl = 750,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 13,
                            AlcoholContent = 42.0,
                            CategoryId = 2,
                            Description = "From the people. For the people. Live it.",
                            Image = "/Photos/Tequila4.webp",
                            ProductName = "Los Bandidos",
                            QuantityInMl = 750,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 14,
                            AlcoholContent = 45.0,
                            CategoryId = 2,
                            Description = "Show you have got what it takes to earn it.",
                            Image = "/Photos/Tequila5.webp",
                            ProductName = "Blood Money",
                            QuantityInMl = 750,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 15,
                            AlcoholContent = 45.0,
                            CategoryId = 2,
                            Description = "Celebrate the day of the dead with this tequila.",
                            Image = "/Photos/Tequila6.webp",
                            ProductName = "Dia de Muertos",
                            QuantityInMl = 750,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 16,
                            AlcoholContent = 38.0,
                            CategoryId = 2,
                            Description = "Feel like a boss of the table with this tequila.",
                            Image = "/Photos/Tequila7.webp",
                            ProductName = "El Patron",
                            QuantityInMl = 750,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 17,
                            AlcoholContent = 40.0,
                            CategoryId = 2,
                            Description = "Live through the Mexican night with this tequila.",
                            Image = "/Photos/Tequila8.webp",
                            ProductName = "Mexican Night",
                            QuantityInMl = 750,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 18,
                            AlcoholContent = 40.0,
                            CategoryId = 2,
                            Description = "Meet and greet the Mexican sunrise with this tequila.",
                            Image = "/Photos/Tequila9.webp",
                            ProductName = "Mexican Sunrise",
                            QuantityInMl = 750,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 19,
                            AlcoholContent = 8.5,
                            CategoryId = 3,
                            Description = "Feel the freshness of pine forest with this beer.",
                            Image = "/Photos/Beer1.webp",
                            ProductName = "Pine Forest",
                            QuantityInMl = 500,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 20,
                            AlcoholContent = 6.5,
                            CategoryId = 3,
                            Description = "Feel the breeze of Alps with this beer.",
                            Image = "/Photos/Beer2.webp",
                            ProductName = "Alpine Breeze",
                            QuantityInMl = 500,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 21,
                            AlcoholContent = 7.0,
                            CategoryId = 3,
                            Description = "Crafted with love and dedication by the Fine Brothers.",
                            Image = "/Photos/Beer3.webp",
                            ProductName = "Fine Brothers",
                            QuantityInMl = 500,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 22,
                            AlcoholContent = 5.5,
                            CategoryId = 3,
                            Description = "Brewed from the best golden wheat.",
                            Image = "/Photos/Beer4.webp",
                            ProductName = "Golden Wheat",
                            QuantityInMl = 500,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 23,
                            AlcoholContent = 7.5,
                            CategoryId = 3,
                            Description = "Fine dark beer for the bear in you.",
                            Image = "/Photos/Beer5.webp",
                            ProductName = "Bearish",
                            QuantityInMl = 500,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 24,
                            AlcoholContent = 6.0,
                            CategoryId = 3,
                            Description = "Brewed to be enjoyed with friends.",
                            Image = "/Photos/Beer6.webp",
                            ProductName = "Quality Time",
                            QuantityInMl = 500,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 25,
                            AlcoholContent = 8.6999999999999993,
                            CategoryId = 3,
                            Description = "Essential beer for every BBQ master.",
                            Image = "/Photos/Beer7.webp",
                            ProductName = "BBQ Master",
                            QuantityInMl = 500,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 26,
                            AlcoholContent = 6.7999999999999998,
                            CategoryId = 3,
                            Description = "Brewed in the traditional Bavarian style.",
                            Image = "/Photos/Beer8.webp",
                            ProductName = "Bavarian",
                            QuantityInMl = 500,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 27,
                            AlcoholContent = 7.7000000000000002,
                            CategoryId = 3,
                            Description = "Finest Dark beer from the Czech Republic.",
                            Image = "/Photos/Beer9.webp",
                            ProductName = "Czech Pride",
                            QuantityInMl = 500,
                            QuantityInStock = 50
                        });
                });

            modelBuilder.Entity("WeBoozin.Models.Tracker", b =>
                {
                    b.Property<int>("TrackerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TrackerId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TrackerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Tracker");
                });

            modelBuilder.Entity("WeBoozin.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WeBoozin.Models.Cart", b =>
                {
                    b.HasOne("WeBoozin.Models.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("WeBoozin.Models.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WeBoozin.Models.CartItem", b =>
                {
                    b.HasOne("WeBoozin.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeBoozin.Models.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WeBoozin.Models.Order", b =>
                {
                    b.HasOne("WeBoozin.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WeBoozin.Models.OrderDetails", b =>
                {
                    b.HasOne("WeBoozin.Models.Order", "Orders")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeBoozin.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WeBoozin.Models.Product", b =>
                {
                    b.HasOne("WeBoozin.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WeBoozin.Models.Tracker", b =>
                {
                    b.HasOne("WeBoozin.Models.Product", "Product")
                        .WithMany("Tracker")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WeBoozin.Models.User", "User")
                        .WithMany("Tracker")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WeBoozin.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("WeBoozin.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("WeBoozin.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("WeBoozin.Models.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("OrderDetails");

                    b.Navigation("Tracker");
                });

            modelBuilder.Entity("WeBoozin.Models.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Tracker");
                });
#pragma warning restore 612, 618
        }
    }
}
